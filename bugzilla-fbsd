#!/usr/bin/env python

import subprocess
import sys
import requests
from subprocess import check_call
import argparse
import re


BUGZILLA_CMD=["/usr/local/bin/bugzilla", "--bugzilla", "https://bugs.freebsd.org/bugzilla/xmlrpc.cgi" ]
# XXX: What is up with --nosslverify?
BUGZILLA_CMD.append("--nosslverify")

"""
/usr/local/bin/bugzilla --bugzilla \
	  https://bugs.freebsd.org/bugzilla/xmlrpc.cgi --nosslverify attach \
	    --file "$PORTFILE" --desc "a fix" "$BUG_ID"



"""

def new_port():
    parser = argparse.ArgumentParser(description='Process some integers.')
    parser.add_argument('--name', required=True, help='name of port')
    parser.add_argument('--fabid', required=True, help='fabricator id')
    args = parser.parse_args()

    # match is start of string...
    if not re.match("^D[0-9]+$", args.fabid):
	print "option --fabid %s doesn't match expected regex /^D[0-9]+/"
	sys.exit(1)

    faburl = "https://reviews.freebsd.org/" + args.fabid
    print "Making sure fabric request exists..."
    r = requests.get(faburl)
    if r.status_code != 200:
	print "Got non 200 status code from %s: code: %d" % (faburl, r.status_code)
	sys.exit(1)

    NEW_PORT_OPTS = ["new", "-p", "Ports Tree", "-v", "Latest", "-c", "Individual Port(s)" ] 
    ADD_OPTS= [
	    "-s", "new port: %s" % args.name,
	    "-l", "new port for %s is available in phabricator at %s" % (args.name, faburl),
	    "--url", faburl
	    ]
    # --online <- gives back bugid for further processing...
    print BUGZILLA_CMD + ADD_OPTS
    check_call(BUGZILLA_CMD + NEW_PORT_OPTS + ADD_OPTS)

PROGNAME="bugzilla-fbsd"
if len(sys.argv) < 2:
    print "Usage: " + PROGNAME + " <login|newport> [options...]"
    sys.exit(1)

op = sys.argv.pop(1)

if op == "login":
    check_call(BUGZILLA_CMD + [ "login" ])
elif op == "newport":
    new_port()
